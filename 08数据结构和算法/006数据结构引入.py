"""
存储学生信息：
    name
    age
    hometown
"""

"""
[
    ("zhangsan",24,"beijing"),
    ("zhangsan",24,"beijing"),
    ("zhangsan",24,"beijing")
]
for stu in stus:
    if stu[0] == "zhangsan":

[
    {
        "name":"zhangsan",
        "age":23,
        "hometown":"beijing"
    }
]

{
    "zhangsan":{
        "age":24,
        "hometown":"beijing"
    },
}
stus["zhangsan"]
"""

# 数据是一个抽象的概念，将其进行分类后得到程序设计语言中的基本类型；
# 数据元素之间不是独立的，存在特定的关系，这些关系便是结构。数据结构指数据对象中数据元素之间的关系。
# 有些数据组织方式，Python系统里面没有直接定义，需要我们自己去定义实现这些数据的组织方式，这些数据组织方式称之为Python的扩展数据结构，比如栈，队列等。


# 算法与数据结构的区别：
"""
    数据结构只是静态的描述了数据元素之间的关系。
    高效的程序需要在数据结构的基础上设计和选择算法。
    程序 = 数据结构 + 算法
    
总结：算法是为了解决实际问题而设计的，数据结构是算法需要处理的问题载体
"""

# 抽象数据类型(Abstract Data Type)
"""
抽象数据类型(ADT)的含义是指一个数学模型以及定义在此数学模型上的一组操作。
即把数据类型和数据类型上的运算捆在一起，进行封装。
引入抽象数据类型的目的是把数据类型的表示和数据类型上运算的实现与这些数据类型和运算在程序中的引用隔开，使它们相互独立。

最常用的数据运算有五种：
    插入
    删除
    修改
    查找
    排序
"""