# 浅拷贝： 是对于一个对象的顶层拷贝；
# 通俗的理解是：拷贝了引用，并没有拷贝内容；

# In [1]: a = [11,22,33]

# In [2]: b = a

# In [3]: id(a),id(b)
# Out[3]: (140578374906184, 140578374906184)

###############################################################

# 深拷贝：

# In [4]: import copy

# In [5]: c = copy.deepcopy(a)

# In [6]: id(a),id(c)
# Out[6]: (140578374906184, 140578373353032)


# 深浅拷贝对可变对象的影响：
# In [7]: a.append(44)

# In [8]: a
# Out[8]: [11, 22, 33, 44]

# In [9]: b
# Out[9]: [11, 22, 33, 44]

# In [10]: c
# Out[10]: [11, 22, 33]


# 扩展：
# In [1]: a = [11,22,33]

# In [2]: b = [44,55,66]

# In [3]: c = [a,b]

# In [4]: d = c

# In [5]: id(c)
# Out[5]: 140429533204232

# In [6]: id(d)
# Out[6]: 140429533204232

# In [7]: import copy

# In [8]: e = copy.deepcopy(c)

# In [9]: id(e)
# Out[9]: 140429532984456

# In [10]: a.append(44)

# In [13]: c[0]
# Out[13]: [11, 22, 33, 44]

# In [14]: d[0]
# Out[14]: [11, 22, 33, 44]

# In [15]: e[0]            # deepcopy复制c时，将c中的元素对象也复制了一份，并将e中的引用指向了新的对象；
# Out[15]: [11, 22, 33]

###########################################################################################

# copy.deepcopy和copy.copy的区别：
# 1、copy.deepcopy会递归拷贝对象中的嵌套对象；
# 2、copy.copy拷贝可变对象时，只会拷贝对象的顶层，对象中嵌套的对象引用不会被拷贝；
# 3、copy.copy拷贝不可变对象时，是浅拷贝，直接改变引用；
